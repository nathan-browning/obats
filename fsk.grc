options:
  parameters:
    author: OBATS team
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: FSK_Example
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: no_gui
    hier_block_src_path: '.:'
    id: fsk_example
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: FSK_Example
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: analog_quadrature_demod_cf_0
  id: analog_quadrature_demod_cf
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    gain: '128177'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [746, 729]
    rotation: 0
    state: disabled
- name: analog_random_source_x_0
  id: analog_random_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    max: '255'
    maxoutbuf: '0'
    min: '0'
    minoutbuf: '0'
    num_samps: '1024'
    repeat: 'True'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [37, 353]
    rotation: 0
    state: disabled
- name: analog_simple_squelch_cc_0
  id: analog_simple_squelch_cc
  parameters:
    affinity: ''
    alias: ''
    alpha: '1'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    threshold: '-70'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [529, 721]
    rotation: 0
    state: disabled
- name: blocks_add_const_vxx_0
  id: blocks_add_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '.850'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [713, 456]
    rotation: 0
    state: disabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: ''
    type: complex
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [469, 154]
    rotation: 0
    state: disabled
- name: blocks_file_sink_1
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: /home/obats/Software/ReadGPS/out.txt
    type: float
    unbuffered: 'True'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1155, 671]
    rotation: 0
    state: disabled
- name: blocks_file_source_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: ''
    file: /home/obats/Documents/source.txt
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'True'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 166]
    rotation: 0
    state: disabled
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '.068'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [498, 460]
    rotation: 0
    state: disabled
- name: blocks_repeat_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: '1056'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [466, 311]
    rotation: 0
    state: disabled
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: '48000'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 323]
    rotation: 0
    state: enabled
- name: blocks_uchar_to_float_1
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [874, 312]
    rotation: 0
    state: enabled
- name: blocks_unpack_k_bits_bb_0
  id: blocks_unpack_k_bits_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '8'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [306, 308]
    rotation: 0
    state: enabled
- name: blocks_vco_c_0
  id: blocks_vco_c
  parameters:
    affinity: ''
    alias: ''
    amplitude: '.500'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: '48000'
    sensitivity: '15708'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [902, 485]
    rotation: 0
    state: enabled
- name: blocks_vco_f_0
  id: blocks_vco_f
  parameters:
    affinity: ''
    alias: ''
    amplitude: '0.5'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: '48000'
    sensitivity: '15708'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [890, 583]
    rotation: 0
    state: disabled
- name: blocks_vector_source_x_0
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'True'
    tags: '[]'
    type: complex
    vector: (0, 0, 0)
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [596, 198]
    rotation: 0
    state: disabled
- name: digital_binary_slicer_fb_0
  id: digital_binary_slicer_fb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1007, 736]
    rotation: 0
    state: disabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport serial\nimport time\nfrom datetime import datetime\n\
      \n\nclass blk(gr.sync_block):  # other base classes are basic_block, decim_block,\
      \ interp_block\n    \"\"\"Embedded Python Block example - a simple multiply\
      \ const\"\"\"\n\n    def __init__(self, example_param=1.0):  # only default\
      \ arguments here\n        \"\"\"arguments to this function show up as parameters\
      \ in GRC\"\"\"\n        gr.sync_block.__init__(\n            self,\n       \
      \     name='Embedded Python Block',   # will show up in GRC\n            in_sig=None,\n\
      \            out_sig=[np.complex]\n        )\n        # if an attribute with\
      \ the same name as a parameter is found,\n        # a callback is registered\
      \ (properties work, too).\n        self.example_param = example_param\n\n  \
      \  def work(self, output_items):\n        \"\"\"example: multiply with constant\"\
      \"\"\n        output_items[0][:] = self.example_param\n        \n        return\
      \ [1,1,1,1,1,1,1,1]\n    # open file to potentially write input to\n    f1 =\
      \ open(\"input.txt\", \"w\")\n    \n    # find and connect to serial port connected\
      \ to GPS\n    gps = serial.Serial('../../../../dev/ttyACM0', baudrate = 9600,\
      \ timeout = 0.5)      # ../../dev/ttyACM0 from home folder (type cd in command\
      \ line)\n    string = gps.readline()                                       \
      \                      # read data from serial port\n\n    print(\"DATA FORMAT:\"\
      )\n    print(\"CPU time, GPS time, latitude(latitude direction), longitude(longitude\
      \ direction), speed, CPU date, GPS date\")\n    print(\"\\n\")\n    print(\"\
      START DATA:\")\n\n    while 1:\n        data = gps.readline()\n        parseGPS(data)\n\
      \        \n        \n        \n        # convert the data in the NMEA message\
      \ into a easy-to-read format\ndef parseGPS(data):\n    data_str = str(data)\
      \                                    # convert data to a string\n    key1 =\
      \ \"$GNRMC\"                                         # GP signifies a satellite\
      \ from the US network\n    key2 = \"$GPRMC\"                               \
      \          # GN signifies a satellite from the Russian network\n\n    if data_str.find(key1)\
      \ > 0 or data_str.find(key2) > 0:  # find right NMEA message\n        sdata\
      \ = data_str.split(\",\")                         # parse\n        if sdata[2]\
      \ == 'V':\n            print(\"NO SATELLITE DATA AVAILABLE\")\n            return\n\
      \        \n        # parse the RMC message\n        time = sdata[1][0:2] + \"\
      :\" + sdata[1][2:4] + \":\" + sdata[1][4:6]    # time\n        lat = decode(sdata[3])\
      \                                              # latitude\n        dirLat =\
      \ sdata[4]                                                   # N/S\n       \
      \ lon = decode(sdata[5])                                              # longitude\n\
      \        dirLon = sdata[6]                                                 \
      \  # E/W\n        speed = sdata[7]                                         \
      \           # speed in knots\n        trCourse = sdata[8]                  \
      \                               # True Course (DON'T NEED)\n        date = sdata[9][0:2]\
      \ + \"/\" + sdata[9][2:4] + \"/\" + sdata[9][4:6]    # date\n        \n    \
      \    # get the curretnt time and date from microcontroller\n        # note:\
      \ there is a consistent five hour difference between CPU and GPS\n        curTime\
      \ = str(datetime.now())\n        scurTime = curTime.split(\" \")\n        cpuTime\
      \ = scurTime[1][0:8]                                                       \
      \       # formatting CPU time to match GPS time\n        cpuDate = scurTime[0][8:10]\
      \ + \"/\" + scurTime[0][5:7] + \"/\" + scurTime[0][2:4]           # formatting\
      \ CPU date to match GPS date\n\n        # display all the data\n        print(cpuTime\
      \ + \",\" + time + \",\" + lat + \"(\" + dirLat + \"),\" + lon + \"(\" + dirLon\
      \ + \"),\" + speed + \",\" + cpuDate + \",\" + date)\n\ndef decode(coord):\n\
      \    # converts DDMM.MMMMM > DD deg MM.MMMMM\n    x = coord.split(\".\")\n \
      \   head = x[0]\n    tail = x[1]\n    deg = head[0:-2]\n    minimum = head[-2:]\n\
      \    return deg + \" deg \" + minimum + \".\" + tail + \" min\"\n\n# write data\
      \ to file\ndef readDataToFile(user_input):\n    # open file in read-only mode\n\
      \    f1 = open(\"input.txt\", \"r\")\n\n    content = f1.read()            \
      \             # get data from file\n    split_content = content.split()    \
      \         # split data from file into lines\n\n    counter = 0\n\n    # count\
      \ the number of lines\n    for i in split_content:\n        if i:\n        \
      \    counter += 1\n\n    print(\"the number of lines in the file:\")\n    print(counter)\n\
      \n    f1.close()\n    \n    # if there is 100 lines already, clear file, and\
      \ start at top. Otherwise, append\n    if counter >= 100:\n        f1 = open(\"\
      input.txt\", \"w\")             # open in write mode (overwrites current data\
      \ in file)\n    else:\n        f1 = open(\"input.txt\", \"a\")             #\
      \ open in append mode (adds data at end of file)\n\n    f1.write(user_input)\
      \                        # write data\n    f1.write(\"\\n\")               \
      \               # add newline\n\n    f1.close()\n\n# calling the main function\n\
      if __name__ == \"__main__\":\n    work()\n"
    affinity: ''
    alias: ''
    comment: ''
    example_param: '1.0'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('example_param', '1.0')], [], [('0',
      'byte', 1)], 'Embedded Python Block example - a simple multiply const', ['example_param'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [220, 172]
    rotation: 0
    state: disabled
- name: epy_module_0
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: '# this module will be imported in the into your flowgraph'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 252]
    rotation: 0
    state: disabled
- name: freq_xlating_fir_filter_xxx_0
  id: freq_xlating_fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    center_freq: '2210'
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: '48000'
    taps: firdes.low_pass(1.0,48000,1000,400)
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [233, 699]
    rotation: 0
    state: disabled
- name: low_pass_filter_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: '200'
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: '48000'
    type: fir_filter_fff
    width: '1000'
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [244, 444]
    rotation: 0
    state: enabled
- name: network_udp_source_0
  id: network_udp_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    header: '0'
    ipv6: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    notify_missed: 'False'
    payloadsize: '81'
    port: '5005'
    src_zeros: 'False'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [34, 269]
    rotation: 0
    state: enabled
- name: osmosdr_sink_0
  id: osmosdr_sink
  parameters:
    affinity: ''
    alias: ''
    ant0: TX1
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    args: '""'
    bb_gain0: '80'
    bb_gain1: '20'
    bb_gain10: '20'
    bb_gain11: '20'
    bb_gain12: '20'
    bb_gain13: '20'
    bb_gain14: '20'
    bb_gain15: '20'
    bb_gain16: '20'
    bb_gain17: '20'
    bb_gain18: '20'
    bb_gain19: '20'
    bb_gain2: '20'
    bb_gain20: '20'
    bb_gain21: '20'
    bb_gain22: '20'
    bb_gain23: '20'
    bb_gain24: '20'
    bb_gain25: '20'
    bb_gain26: '20'
    bb_gain27: '20'
    bb_gain28: '20'
    bb_gain29: '20'
    bb_gain3: '20'
    bb_gain30: '20'
    bb_gain31: '20'
    bb_gain4: '20'
    bb_gain5: '20'
    bb_gain6: '20'
    bb_gain7: '20'
    bb_gain8: '20'
    bb_gain9: '20'
    bw0: '5000'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    corr0: '0'
    corr1: '0'
    corr10: '0'
    corr11: '0'
    corr12: '0'
    corr13: '0'
    corr14: '0'
    corr15: '0'
    corr16: '0'
    corr17: '0'
    corr18: '0'
    corr19: '0'
    corr2: '0'
    corr20: '0'
    corr21: '0'
    corr22: '0'
    corr23: '0'
    corr24: '0'
    corr25: '0'
    corr26: '0'
    corr27: '0'
    corr28: '0'
    corr29: '0'
    corr3: '0'
    corr30: '0'
    corr31: '0'
    corr4: '0'
    corr5: '0'
    corr6: '0'
    corr7: '0'
    corr8: '0'
    corr9: '0'
    freq0: 2.4e9
    freq1: 100e6
    freq10: 100e6
    freq11: 100e6
    freq12: 100e6
    freq13: 100e6
    freq14: 100e6
    freq15: 100e6
    freq16: 100e6
    freq17: 100e6
    freq18: 100e6
    freq19: 100e6
    freq2: 100e6
    freq20: 100e6
    freq21: 100e6
    freq22: 100e6
    freq23: 100e6
    freq24: 100e6
    freq25: 100e6
    freq26: 100e6
    freq27: 100e6
    freq28: 100e6
    freq29: 100e6
    freq3: 100e6
    freq30: 100e6
    freq31: 100e6
    freq4: 100e6
    freq5: 100e6
    freq6: 100e6
    freq7: 100e6
    freq8: 100e6
    freq9: 100e6
    gain0: '80'
    gain1: '10'
    gain10: '10'
    gain11: '10'
    gain12: '10'
    gain13: '10'
    gain14: '10'
    gain15: '10'
    gain16: '10'
    gain17: '10'
    gain18: '10'
    gain19: '10'
    gain2: '10'
    gain20: '10'
    gain21: '10'
    gain22: '10'
    gain23: '10'
    gain24: '10'
    gain25: '10'
    gain26: '10'
    gain27: '10'
    gain28: '10'
    gain29: '10'
    gain3: '10'
    gain30: '10'
    gain31: '10'
    gain4: '10'
    gain5: '10'
    gain6: '10'
    gain7: '10'
    gain8: '10'
    gain9: '10'
    if_gain0: '80'
    if_gain1: '20'
    if_gain10: '20'
    if_gain11: '20'
    if_gain12: '20'
    if_gain13: '20'
    if_gain14: '20'
    if_gain15: '20'
    if_gain16: '20'
    if_gain17: '20'
    if_gain18: '20'
    if_gain19: '20'
    if_gain2: '20'
    if_gain20: '20'
    if_gain21: '20'
    if_gain22: '20'
    if_gain23: '20'
    if_gain24: '20'
    if_gain25: '20'
    if_gain26: '20'
    if_gain27: '20'
    if_gain28: '20'
    if_gain29: '20'
    if_gain3: '20'
    if_gain30: '20'
    if_gain31: '20'
    if_gain4: '20'
    if_gain5: '20'
    if_gain6: '20'
    if_gain7: '20'
    if_gain8: '20'
    if_gain9: '20'
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    sample_rate: 1e6
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1259, 361]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1000'
    srate: '48000'
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1124, 596]
    rotation: 0
    state: disabled
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: xmt_data
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1076, 307]
    rotation: 0
    state: enabled
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: fsk_out
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1124, 507]
    rotation: 0
    state: disabled
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: xmt_data
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [10, 499]
    rotation: 0
    state: enabled
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: fsk_out
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [21, 709]
    rotation: 0
    state: disabled

connections:
- [analog_quadrature_demod_cf_0, '0', digital_binary_slicer_fb_0, '0']
- [analog_random_source_x_0, '0', blocks_unpack_k_bits_bb_0, '0']
- [analog_simple_squelch_cc_0, '0', analog_quadrature_demod_cf_0, '0']
- [blocks_add_const_vxx_0, '0', blocks_vco_c_0, '0']
- [blocks_add_const_vxx_0, '0', blocks_vco_f_0, '0']
- [blocks_multiply_const_vxx_0, '0', blocks_add_const_vxx_0, '0']
- [blocks_repeat_0, '0', blocks_throttle_0, '0']
- [blocks_throttle_0, '0', blocks_uchar_to_float_1, '0']
- [blocks_uchar_to_float_1, '0', virtual_sink_0, '0']
- [blocks_unpack_k_bits_bb_0, '0', blocks_repeat_0, '0']
- [blocks_unpack_k_bits_bb_0, '0', blocks_throttle_0, '0']
- [blocks_vco_c_0, '0', osmosdr_sink_0, '0']
- [blocks_vco_c_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_vco_c_0, '0', virtual_sink_1, '0']
- [blocks_vco_f_0, '0', blocks_file_sink_1, '0']
- [blocks_vco_f_0, '0', qtgui_time_sink_x_0, '0']
- [epy_block_0, '0', blocks_file_sink_0, '0']
- [freq_xlating_fir_filter_xxx_0, '0', analog_simple_squelch_cc_0, '0']
- [low_pass_filter_0, '0', blocks_multiply_const_vxx_0, '0']
- [low_pass_filter_0, '0', blocks_vco_c_0, '0']
- [low_pass_filter_0, '0', blocks_vco_f_0, '0']
- [network_udp_source_0, '0', blocks_unpack_k_bits_bb_0, '0']
- [virtual_source_0, '0', low_pass_filter_0, '0']
- [virtual_source_1, '0', freq_xlating_fir_filter_xxx_0, '0']

metadata:
  file_format: 1
